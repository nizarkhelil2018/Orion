<?php

namespace Proxies\__CG__\Orion\EventBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Evenement extends \Orion\EventBundle\Entity\Evenement implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'id', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'titre', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'description', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'etat', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'dateCreation', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'pays', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'ville', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'codePostal', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'adresse', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'horaireDebut', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'HoraireFin', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'fuseauHoraire', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'organisateur', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'theme', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'type', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'path', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'updateAt', 'file'];
        }

        return ['__isInitialized__', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'id', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'titre', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'description', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'etat', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'dateCreation', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'pays', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'ville', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'codePostal', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'adresse', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'horaireDebut', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'HoraireFin', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'fuseauHoraire', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'organisateur', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'theme', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'type', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'path', '' . "\0" . 'Orion\\EventBundle\\Entity\\Evenement' . "\0" . 'updateAt', 'file'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Evenement $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', []);

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', []);

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function getPays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPays', []);

        return parent::getPays();
    }

    /**
     * {@inheritDoc}
     */
    public function getVille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVille', []);

        return parent::getVille();
    }

    /**
     * {@inheritDoc}
     */
    public function getCodePostal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodePostal', []);

        return parent::getCodePostal();
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function getHoraireDebut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoraireDebut', []);

        return parent::getHoraireDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function getHoraireFin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoraireFin', []);

        return parent::getHoraireFin();
    }

    /**
     * {@inheritDoc}
     */
    public function getFuseauHoraire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFuseauHoraire', []);

        return parent::getFuseauHoraire();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganisateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganisateur', []);

        return parent::getOrganisateur();
    }

    /**
     * {@inheritDoc}
     */
    public function getTheme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTheme', []);

        return parent::getTheme();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateAt', []);

        return parent::getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre($titre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', [$titre]);

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation(\DateTime $dateCreation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', [$dateCreation]);

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function setPays($pays)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPays', [$pays]);

        return parent::setPays($pays);
    }

    /**
     * {@inheritDoc}
     */
    public function setVille($ville)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVille', [$ville]);

        return parent::setVille($ville);
    }

    /**
     * {@inheritDoc}
     */
    public function setCodePostal($codePostal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodePostal', [$codePostal]);

        return parent::setCodePostal($codePostal);
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse($adresse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function setHoraireDebut(\DateTime $horaireDebut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoraireDebut', [$horaireDebut]);

        return parent::setHoraireDebut($horaireDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function setHoraireFin(\DateTime $HoraireFin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoraireFin', [$HoraireFin]);

        return parent::setHoraireFin($HoraireFin);
    }

    /**
     * {@inheritDoc}
     */
    public function setFuseauHoraire($fuseauHoraire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFuseauHoraire', [$fuseauHoraire]);

        return parent::setFuseauHoraire($fuseauHoraire);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganisateur($organisateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganisateur', [$organisateur]);

        return parent::setOrganisateur($organisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function setTheme(\Orion\EventBundle\Entity\Theme $theme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTheme', [$theme]);

        return parent::setTheme($theme);
    }

    /**
     * {@inheritDoc}
     */
    public function setType(\Orion\EventBundle\Entity\Type $type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', [$path]);

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateAt(\DateTime $updateAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateAt', [$updateAt]);

        return parent::setUpdateAt($updateAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function postLoad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'postLoad', []);

        return parent::postLoad();
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadRootDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadRootDir', []);

        return parent::getUploadRootDir();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsolutePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsolutePath', []);

        return parent::getAbsolutePath();
    }

    /**
     * {@inheritDoc}
     */
    public function getAssetPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssetPath', []);

        return parent::getAssetPath();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpload', []);

        return parent::preUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', []);

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function preRemoveUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preRemoveUpload', []);

        return parent::preRemoveUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', []);

        return parent::removeUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
